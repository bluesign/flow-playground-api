scalar UUID
scalar Address

type Project {
  id: UUID!
  accounts: [Account!]
  transactionTemplates: [TransactionTemplate!]
  transactionExecutions: [TransactionExecution!]
  scriptTemplates: [ScriptTemplate!]
  scriptExecutions: [ScriptExecution!]
}

type Account {
  id: UUID!
  address: Address!
  draftCode: String!
  deployedCode: String!
}

type TransactionTemplate {
  id: UUID!
  index: Int!
  script: String!
}

type TransactionExecution {
  id: UUID!
  script: String!
  payerAccount: Account!
  signerAccounts: [Account!]!
}

type ScriptTemplate {
  id: UUID!
  index: Int!
  script: String!
}

type ScriptExecution {
  id: UUID!
  script: String!
}

type Query {
  project(id: UUID!): Project!

  transactionTemplate(id: UUID!): TransactionTemplate!
  scriptTemplate(id: UUID!): ScriptTemplate!
}

input NewTransactionTemplate {
  projectId: UUID!
  script: String!
}

input UpdateTransactionTemplate {
  id: UUID!
  index: Int
  script: String
}

input NewTransactionExecution {
  script: String!
  payer: String!
  signers: [String]!
}

input NewScriptTemplate {
  projectId: UUID!
  script: String!
}

input UpdateScriptTemplate {
  id: UUID!
  index: Int
  script: String
}

input NewScriptExecution {
  script: String!
}

type Mutation {
  createProject: Project!

  createTransactionTemplate(input: NewTransactionTemplate!): TransactionTemplate!
  updateTransactionTemplate(input: UpdateTransactionTemplate!): TransactionTemplate!
  deleteTransactionTemplate(id: UUID!): UUID!
  createTransactionExecution(input: NewTransactionExecution!): TransactionExecution!

  createScriptTemplate(input: NewScriptTemplate!): ScriptTemplate!
  updateScriptTemplate(input: UpdateScriptTemplate!): ScriptTemplate!
  createScriptExecution(input: NewScriptExecution!): ScriptExecution!
}

